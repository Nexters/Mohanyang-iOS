import ProjectDescription

@_spi(PomoNyang)
@_spi(ThirdPartyLibrary)
import DependencyPlugin

let workspace = Workspace(
  name: "PomoNyang",
  projects: {
    var projects: [Path] = []
    
    projects.append(Path("Projects/App"))
    projects += PomoNyang.Feature.allCases.map {
      Path("Projects/\(String(describing: type(of: $0)))/\(String(describing: $0))")
    }
    projects += PomoNyang.Core.allCases.map {
      Path("Projects/\(String(describing: type(of: $0)))/\(String(describing: $0))")
    }
    projects += PomoNyang.Shared.allCases.map {
      Path("Projects/\(String(describing: type(of: $0)))/\(String(describing: $0))")
    }
    projects += PomoNyang.Domain.allCases.map {
      Path("Projects/\(String(describing: type(of: $0)))/\(String(describing: $0))")
    }
    
    projects += ThirdPartyLibrary.allCases.map {
      Path("Projects/\(String(describing: type(of: $0)))/\(String(describing: $0))")
    }
    return projects
  }(),
  generationOptions: .options(
    enableAutomaticXcodeSchemes: false,
    autogeneratedWorkspaceSchemes: .enabled(codeCoverageMode: .relevant),
    renderMarkdownReadme: true
  )
)
